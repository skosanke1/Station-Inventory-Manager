CREATE TABLE MANUFACTURER
(MName VARCHAR(50) NOT NULL,
MPhoneNum CHAR(10),
MAddress VARCHAR(50),
PRIMARY KEY (MName));

CREATE TABLE PRODUCT
(ProductID INT NOT NULL,
ProductName VARCHAR(30) NOT NULL,
MName VARCHAR(50) NOT NULL,
PRIMARY KEY (ProductID),
FOREIGN KEY (MName) REFERENCES MANUFACTURER(MName)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE STORE
(StoreID INT NOT NULL,
SName VARCHAR(50) NOT NULL,
SAddress VARCHAR(30),
SPhoneNum CHAR(10),
PRIMARY KEY (StoreID));

CREATE TABLE BELONGS_TO
(StoreID INT NOT NULL,
ProductID INT NOT NULL,
RewardsPrice DECIMAL(10,2),
RetailPrice DECIMAL(10,2),
Quantity INT,
PRIMARY KEY (StoreID, ProductID),
FOREIGN KEY (StoreID) REFERENCES STORE(StoreID)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE CUSTOMER
(RewardsID INT NOT NULL,
PhoneNum CHAR(10) UNIQUE,
FirstName VARCHAR(20),
LastName VARCHAR(20),
PRIMARY KEY (RewardsID));

CREATE TABLE SALES
(InvoiceID CHAR(10) NOT NULL,
StoreID INT NOT NULL,
DateAndTime DATETIME NOT NULL,
PRIMARY KEY (InvoiceID),
FOREIGN KEY (StoreID) REFERENCES STORE(StoreID)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE CUST_SALES
(InvoiceID CHAR(10) NOT NULL,
RewardsID INT,
PRIMARY KEY (InvoiceID),
FOREIGN KEY (InvoiceID) REFERENCES SALES(InvoiceID)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (RewardsID) REFERENCES CUSTOMER(RewardsID)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE SALES_ITEM
(InvoiceID CHAR(10) NOT NULL,
ProductID INT NOT NULL,
Quantity INT,
PRIMARY KEY (InvoiceID, ProductID),
FOREIGN KEY (InvoiceID) REFERENCES SALES(InvoiceID)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE RETURN_ITEM
(InvoiceID CHAR(10) NOT NULL,
ProductID INT NOT NULL,
Quantity INT,
PRIMARY KEY (InvoiceID, ProductID),
FOREIGN KEY (InvoiceID) REFERENCES SALES(InvoiceID)
ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ProductID) REFERENCES PRODUCT(ProductID)
ON DELETE CASCADE ON UPDATE CASCADE);